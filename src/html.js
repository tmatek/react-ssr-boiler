import React from 'react'
import { renderToString } from 'react-dom/server'
import { ServerLocation } from '@reach/router'
import { ServerStyleSheet } from 'styled-components'
import App from './app'

/**
 * Server-rendered HTML document. Receives the page URL to initialize the router
 * and the initial server data to re-hydrate the pages on the client. Each Javascript
 * bundle is appended to the head as a <script> element. The server stylesheet is
 * generated by collecting all class names.
 */
const HtmlDoc = ({ url, serverData, manifest }) => {
  const sheet = new ServerStyleSheet()
  const appElement = (
    <ServerLocation url={url}>
      <App serverData={serverData} />
    </ServerLocation>
  )

  let styleTags, html
  try {
    html = renderToString(sheet.collectStyles(appElement))
    styleTags = sheet.getStyleElement()
  } catch (error) {
    console.error(error)
  } finally {
    sheet.seal()
  }

  return (
    <html>
      <head>
        <title>Test app</title>
        <meta charSet="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        {styleTags}
        <script
          defer
          type="text/javascript"
          dangerouslySetInnerHTML={{
            __html: `window.__DATA__ = ${JSON.stringify(serverData)}`,
          }}
        />
        {manifest.map((chunk) => (
          <script key={chunk} type="text/javascript" src={`/${chunk}`} defer />
        ))}
      </head>
      <body>
        <div id="app" dangerouslySetInnerHTML={{ __html: html }} />
      </body>
    </html>
  )
}

export default HtmlDoc
